1

while true; do
    echo "While Loop Demo"
    read -n 1 key
    [[ $key == "q" ]] && break
done
echo "Thanks"

2

while true; do
    echo -e "Date: $(date)\nUsername: $USER\nCurrent Directory: $(pwd)"
    sleep 15
done

3

while true; do
    read input
    [[ "$input" == "quit" ]] && break
    echo "$input"
done

4

until [[ $key == "q" ]]; do
    read -n 1 key
done
echo "Until Loop Demo"

5
until [[ "$input" == "quit" ]]; do
    read input
    echo "$input"
done

6
cars=("Toyota" "Honda" "Ford" "Chevrolet")
for car in "${cars[@]}"; do
    echo "$car"
done


7
for i in {0..9}; do
    echo $i
done
echo

8
for user in $(who | cut -d' ' -f1); do
    echo -n "$user's home directory: "
    [[ -d ~$user ]] && echo -n "Directory" || echo -n "Regular file"
    echo
done

9
9. 
```bash
read -p "Enter y or Y for YES, n or N for NO: " input
case $input in
    y|Y)
        echo "YES"
        ;;
    n|N)
        echo "NO"
        ;;
    *)
        echo "Only y, Y, n, N should be entered."
        ;;
esac
```

10. (Assuming options 1, 2, 3 as shown in the screenshot)
```bash
select option in "Option 1" "Option 2" "Option 3"; do
    case $option in
        "Option 1")
            echo "You selected Option 1"
            ;;
        "Option 2")
            echo "You selected Option 2"
            ;;
        "Option 3")
            echo "You selected Option 3"
            ;;
        *)
            echo "Invalid option"
            ;;
    esac
    break
done
```

11. (Assuming options A, B, C as shown in the screenshot with P3)
```bash
PS3="Select an option (1-3): "
select option in "Option A" "Option B" "Option C"; do
    case $option in
        "Option A")
            echo "You selected Option A"
            ;;
        "Option B")
            echo "You selected Option B"
            ;;
        "Option C")
            echo "You selected Option C"
            ;;
        *)
            echo "Invalid option"
            ;;
    esac
    break
done
```

12. (Assuming options X, Y, Z as shown in the screenshot)
```bash
PS3="Select an option (1-3): "
select option in "Option X" "Option Y" "Option Z"; do
    case $option in
        "Option X"|"Option Y"|"Option Z")
            echo "You selected $option"
            ;;
        *)
            echo "Invalid option"
            ;;
    esac
    break
done
```

13. (Assuming options P, Q, R as shown in the screenshot)
```bash
PS3="Select an option (1-3): "
select option in "Option P" "Option Q" "Option R"; do
    case $option in
        "Option P"|"Option Q"|"Option R")
            echo "You selected $option"
            ;;
        *)
            echo "Invalid option"
            ;;
    esac
    break
done
```

14.
```bash
PS3="Select an option (1-3): "
select option in "Option 1" "Option 2" "Option 3"; do
    case $option in
        "Option 1")
            echo "You selected Option 1"
            ;;
        "Option 2")
            echo "You selected Option 2"
            ;;
        "Option 3")
            echo "You selected Option 3"
            ;;
        *)
            echo "Invalid option"
            ;;
    esac
    break
done
```

15. (Using Zenity for GUI, assuming dialog type is question)
```bash
zenity --list --title="Select an option" --column="Options" "a" "b" "c" "d" --height=200
```

16. (Using Zenity for GUI, assuming file name is "example.txt")
```bash
zenity --text-info --filename="example.txt" --editable --width=500 --height=300
```

17. (Using Zenity for GUI, assuming file name is "editable_file.txt")
```bash
zenity --text-info --filename="editable_file.txt" --editable --width=500 --height=300
```

18. (Using Zenity for GUI, assuming calendar is for date selection)
```bash
selected_date=$(zenity --calendar --text="Select a date" --date-format="%Y-%m-%d" --title="Date Selection")
zenity --info --text="Selected Date: $selected_date"
```

19. (Using Zenity for GUI, assuming calendar is for date selection)
```bash
while true; do
    selected_date=$(zenity --calendar --text="Select a date" --date-format="%Y-%m-%d" --title="Date Selection")
    zenity --info --text="Selected Date: $selected_date"
    response=$(zenity --question --text="Select again?")
    [[ $response == "No" ]] && break
done
```

20. (Using Zenity for GUI)
```bash
name=$(zenity --entry --text="Enter your name")
zenity --info --text="Entered Name: $name"
```

21. (Using Zenity for GUI)
```bash
first_name=$(zenity --entry --text="Enter First Name")
last_name=$(zenity --entry --text="Enter Last Name")
password=$(zenity --password --text="Enter Password")
zenity --info --text="First Name: $first_name\nLast Name: $last_name\nPassword: $password"
```

22. (Using Zenity for GUI)
```bash
first_name=$(zenity --entry --text="Enter First Name")
last_name=$(zenity --entry --text="Enter Last Name")
echo "$first_name|$last_name"
```

23. (Using Zenity for GUI, assuming options are Graduation: 2020, 2021, 2022)
```bash
selected_option=$(zenity --list --title="Select Graduation Year" --column="Options" "2020" "2021" "2022")
echo "Graduation: $selected_option"
```

24. (Using Zenity for GUI, assuming options are Graduation: 2020, 2021, 2022 and writing to "user.txt")
```bash
while true; do
    selected_option=$(zenity --list --title="Select Graduation Year" --column="Options" "2020" "2021" "2022")
    echo "Graduation: $selected_option" >> user.txt
    response=$(zenity --question --text="Continue?")
    [[ $response == "No" ]] && break
done
```
